The ``matrix_mul`` module
==========================

Using ``matrix_mul``
-------------------------
->	matrix_mul(m_a, m_b)

-   m_a and m_b must be validated with these requirements in this order
-   m_a and m_b must be an list of lists of integers or floats:

    -   if m_a or m_b is not a list: raise a TypeError exception
            with the message m_a must be a list or m_b must be a list
    -   if m_a or m_b is not a list of lists: raise a TypeError exception
            with the message m_a must be a list of lists
            or m_b must be a list of lists
    -   if m_a or m_b is empty (it means: = [] or = [[]]):
            raise a ValueError exception with the message
            m_a can't be empty or m_b can't be empty
    -   if one element of those list of lists is not an integer or a float:
            raise a TypeError exception with the message m_a should contain
            only integers or floats or m_b should contain only integers
            or floats
    -   if m_a or m_b is not a rectangle
            (all ‘rows’ should be of the same size): raise a TypeError
            exception with the message each row of m_a must be of the
            same size or each row of m_b must be of the same size
-   If m_a and m_b can’t be multiplied: raise a ValueError exception
        with the message m_a and m_b can't be multiplied
- Returns a new matrix

------------------------------

>>> matrix_mul = __import__('100-matrix_mul').matrix_mul
>>> m_b = [
... [2, 1, 4, 3],
... [4, 5, 6, 2],
... [10, 4, 1, 2]
... ]
>>>
>>> m_a = [
... [1, 2, 3],
... [2, 4, 0]
... ]

>>> test_a, test_b = [[2, 3]], [[2, 5, 1], [4, 2, 1]]


Basic Tests
    >>> matrix_mul(m_a, m_b)    # doctest: +NORMALIZE_WHITESPACE
    [[40, 23, 19, 13], [20, 22, 32, 14]]

    >>> matrix_mul(test_a, test_b)
    [[16, 16, 5]]


Type errors:

    >>> matrix_mul(m_a, 4)
    Traceback (most recent call last):
    ...
    TypeError: m_b must be a list

    >>> matrix_mul(False, m_b)
    Traceback (most recent call last):
    ...
    TypeError: m_a must be a list

    >>> matrix_mul([6.987, 4])      # doctest: +ELLIPSIS
    Traceback (most recent call last):
    ...
    TypeError: ...

    ** List of lists **
    >>> matrix_mul([6.987, 4], [[2, 3, 5]])
    Traceback (most recent call last):
    ...
    TypeError: m_a must be a list of lists

    >>> matrix_mul([[2, 34, 5]], [6.987, 4])
    Traceback (most recent call last):
    ...
    TypeError: m_b must be a list of lists

    ** Empty **
    >>> matrix_mul([], [[2, 3, 5]])
    Traceback (most recent call last):
    ...
    ValueError: m_a can't be empty

    >>> matrix_mul([[]], [[2, 3, 5]])
    Traceback (most recent call last):
    ...
    ValueError: m_a can't be empty

    >>> matrix_mul([[2, 3, 5]], [])
    Traceback (most recent call last):
    ...
    ValueError: m_b can't be empty

    >>> matrix_mul([[2, 3, 5]], [[]])
    Traceback (most recent call last):
    ...
    ValueError: m_b can't be empty

    ** Only integers or floats **
    >>> matrix_mul([[2, True, 5, 6], [4]], [[2, 5, 4]])
    Traceback (most recent call last):
    ...
    TypeError: m_a should contain only integers or floats

    >>> matrix_mul([[2, 1, 5, 6], [4]], [[2, 5, 4, [3, 2]]])
    Traceback (most recent call last):
    ...
    TypeError: m_b should contain only integers or floats

    ** On rectangle size **
    >>> matrix_mul([[2, 1, 5, 6], [4, 1, 2, 9], [23, 15, 6]], [[2, 5, 4, 3, 2]])
    Traceback (most recent call last):
    ...
    TypeError: each row of m_a must be of the same size

    >>> matrix_mul([[2, 5, 4, 3]], [[2, 1, 5, 6], [4, 1, 2, 9], [23, 15, 6]])
    Traceback (most recent call last):
    ...
    TypeError: each row of m_b must be of the same size

    ** Whether matrices can be multiplied **
    >>> matrix_mul([[2, 5, 4, 3]], [[2, 1, 5, 6], [4, 1, 2, 9], [23, 15, 6, 2]])
    Traceback (most recent call last):
    ...
    ValueError: m_a and m_b can't be multiplied

    >>> matrix_mul([[2, 5]], [[2, 1, 5, 6]])
    Traceback (most recent call last):
    ...
    ValueError: m_a and m_b can't be multiplied

    >>> matrix_mul([[2, 5]], [[5, 6]])
    Traceback (most recent call last):
    ...
    ValueError: m_a and m_b can't be multiplied

    >>> matrix_mul([[2, 5], [2, 3]], [[5, 6]])
    Traceback (most recent call last):
    ...
    ValueError: m_a and m_b can't be multiplied

None:
    >>> matrix_mul()                       # doctest: +ELLIPSIS
    Traceback (most recent call last):
    ...
    TypeError: ...
