The ``matrix_divide`` module
==========================

Using ``matrix_divide``
-------------------------
->	matrix_divide(matrix, div):

- matrix must be a list of lists of integers or floats, otherwise raise a TypeError exception with the message
    matrix must be a matrix (list of lists) of integers/floats
- Each row of the matrix must be of the same size, otherwise raise a TypeError exception with the message
    Each row of the matrix must have the same size
- div must be a number (integer or float), otherwise raise a TypeError exception with the message
    div must be a number
- div canâ€™t be equal to 0, otherwise raise a ZeroDivisionError exception with the message
    division by zero
- All elements of the matrix should be divided by div, rounded to 2 decimal places
- Returns a new matrix

------------------------------

>>> mat_div = __import__('2-matrix_divided').matrix_divided
>>> mat = [
... [2, 31.43, 89.9, 0, 32.0],
... [4, 5, 6, 7, 8],
... [1.5, 2.5, 3.5, 4.5, 5.5],
... [10, 20, 30, 40, 50]
... ]


Basic Tests
    >>> mat_div(mat, 2)                 # doctest: +NORMALIZE_WHITESPACE
    [[1.0, 15.71, 44.95, 0.0, 16.0],
     [2.0, 2.5, 3.0, 3.5, 4.0],
     [0.75, 1.25, 1.75, 2.25, 2.75],
     [5.0, 10.0, 15.0, 20.0, 25.0]]


    >>> mat_div(mat, 2.5)
    [[0.8, 12.57, 35.96, 0.0, 12.8], [1.6, 2.0, 2.4, 2.8, 3.2], [0.6, 1.0, 1.4, 1.8, 2.2], [4.0, 8.0, 12.0, 16.0, 20.0]]

Division by zero:
    >>> mat_div(mat, 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

Type errors:
    On div:
        >>> mat_div(mat, (2,))
        Traceback (most recent call last):
        ...
        TypeError: div must be a number

        >>> mat_div(mat, [])
        Traceback (most recent call last):
        ...
        TypeError: div must be a number

        >>> mat_div(mat, True)
        Traceback (most recent call last):
        ...
        TypeError: div must be a number

    On matrix:
        >>> mat_div(3, 4)
        Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

        >>> mat_div(6.987, 4)
        Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

        >>> mat_div((5,8), 4)
        Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

        >>> mat_div([2, 3, 5, 6], 4)
        Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

        >>> mat_div([[2, 3, 32.5, 98], [21, 4, 5.8, False], [12, 5, "stuff", (4, 5)]], 2.5)
        Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

        >>> mat_div([[], [], []], 2.5)
        Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

    Missing Parameters:
		>>> mat_div([[1, 2], [2, 5]])        # doctest: +ELLIPSIS
		Traceback (most recent call last):
		...
		TypeError: ...

		>>> mat_div()                # doctest: +ELLIPSIS
		Traceback (most recent call last):
		...
		TypeError: ...

    On size
        >>> mat_div([[2, 3, 32.5, 98], [21, 4, 5.8], [12, 5]], 4)
        Traceback (most recent call last):
        ...
        TypeError: Each row of the matrix must have the same size