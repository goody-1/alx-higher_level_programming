The ``print_square`` module
==========================

Using ``print_square``
-------------------------
->	print_square(value)

-   size is the size length of the square
-   size must be an integer, otherwise raise a TypeError exception
        with the message size must be an integer
-   if size is less than 0, raise a ValueError exception
        with the message size must be >= 0
-   if size is a float and is less than 0, raise a TypeError exception
        with the message size must be an integer

------------------------------

>>> print_square = __import__('4-print_square').print_square


Basic Tests
    >>> print_square(2)     # doctest: +REPORT_NDIFF +ELLIPSIS
    ##
    ##

    >>> print_square(4)
    ####
    ####
    ####
    ####

Type errors:
    >>> print_square(True)
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer


    >>> print_square(32.4)
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

    >>> print_square(0.324)
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

    >>> print_square(-12.4)
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

    >>> print_square(-23)
    Traceback (most recent call last):
    ...
    ValueError: size must be >= 0

    >>> print_square({True, 67})
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

    None:
        >>> print_square()                       # doctest: +ELLIPSIS
        Traceback (most recent call last):
        ...
        TypeError: ...