The ``7-base_geometry`` module
=========================

Using `BaseGeometry` class
---------------------

Importing the class from the module:
	>>> BaseGeometry = __import__("7-base_geometry").BaseGeometry

Checking for module docstring:
	>>> module_doc = __import__("7-base_geometry").__doc__
	>>> len(module_doc) > 1
	True

Checking for class docstring:
	>>> class_doc = __import__("7-base_geometry").BaseGeometry.__doc__
	>>> len(class_doc) > 1
	True

Checking for area method docstring:
	>>> area_method_doc = __import__("7-base_geometry").BaseGeometry.area.__doc__
	>>> len(area_method_doc) > 1
	True

Checking for integer_validator method docstring:
	>>> integer_validator_method_doc = __import__("7-base_geometry").BaseGeometry.integer_validator.__doc__
	>>> len(integer_validator_method_doc) > 1
	True

Testing functionality of integer_validator:
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("string", "Four")
	Traceback (most recent call last):
	...
	TypeError: string must be an integer

	>>> bg.integer_validator()                    # doctest: +ELLIPSIS
	Traceback (most recent call last):
	...
	TypeError: ...

	>>> bg.integer_validator("Luke", 13)
	>>> bg.integer_validator("anything", -3)
	Traceback (most recent call last):
	...
	ValueError: anything must be greater than 0

	>>> bg.integer_validator("zero", 0)
	Traceback (most recent call last):
	...
	ValueError: zero must be greater than 0
